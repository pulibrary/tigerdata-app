version: 2.1
parameters:
  GHA_Event:
    type: string
    default: ""
  GHA_Actor:
    type: string
    default: ""
  GHA_Action:
    type: string
    default: ""
  GHA_Meta:
    type: string
    default: ""

orbs:
  browser-tools: circleci/browser-tools@1.4.8
  coveralls: coveralls/coveralls@2.2.1
  ruby: circleci/ruby@2.5.3
  node: circleci/node@7.1.0
executors:
  basic-executor:
    docker:
      - image: cimg/ruby:3.4.1-browsers
        environment:
          RAILS_ENV: ci
    resource_class: small
    working_directory: ~/tigerdata-app

commands:
  install_dependencies:
    steps:
      - run: sudo apt update && sudo apt install -y postgresql-client libmsgpack-dev libpq-dev tzdata
      - run: gem install bundler -v '2.5.6'
      - run: cp Gemfile.lock Gemfile.lock.bak
      - restore_cache:
          key: &gem_key tiger_data-cimg-{{ checksum "Gemfile.lock.bak" }}-2
      - run: bundle config set path './vendor/bundle'
      - run: bundle config set --local without production
      - run: bundle install --jobs=4 --retry=3
      - save_cache:
          key: *gem_key
          paths:
            - ./vendor/bundle
      - restore_cache:
          name: Restore Yarn Package Cache
          key: &yarn_key tiger_data-yarn-cimg-{{ checksum "yarn.lock" }}-2
      - run:
          name: Install NPM Dependencies via Yarn
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: *yarn_key
          paths:
            - ~/.cache/yarn

  run_mediaflux:
    steps:
      - run: echo "$DOCKERHUB_PASSWORD" | sudo podman login --username $DOCKERHUB_USERNAME --password-stdin docker.io
      - run: sudo podman pull docker.io/pulibraryrdss/mediaflux_dev:v0.8.0
      - run: sudo podman run -d --privileged --cgroups=disabled --name mediaflux --publish 0.0.0.0:8888:80 --mac-address 02:42:ac:11:00:02 pulibraryrdss/mediaflux_dev:v0.8.0

  run_postgres:
    steps:
      - run: podman create --name postgres --publish 0.0.0.0:5432:5432 --env POSTGRES_HOST_AUTH_METHOD=trust --env POSTGRES_DB=test_db --env POSTGRES_USER=tiger_data_user docker.io/postgres:15.2-alpine
      - run: podman start postgres

  cleanup_docker:
    steps:
      - run: sudo podman stop mediaflux || true
      - run: podman stop postgres mediaflux || true
      - run: podman system prune -a --volumes -f || true

jobs:
  test:
    working_directory: ~/tiger_data
    machine: true
    resource_class: pulibrary/ruby-deploy
    environment:
      POSTGRES_USER: tiger_data_user
      POSTGRES_DB: test_db
      POSTGRES_HOST_AUTH_METHOD: trust
      ARCH: linux
      RAILS_ENV: test
    steps:
      - checkout
      - ruby/install:
          version: "3.3.0"
      - node/install:
          install-yarn: true
          node-version: "22.9"
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - install_dependencies
      - cleanup_docker
      - run_mediaflux
      - run_postgres
      - run:
          name: Run rubocop
          command: bundle exec rubocop
          paths: "*"
      - run:
          name: Run prettier
          command: yarn run prettier --check .
      - run:
          name: Run eslint
          command: yarn run eslint 'app/javascript/**'
      - persist_to_workspace:
          root: &root "~/tiger_data"
          paths: "*"
      # wait for postgres and mediaflux
      - run: sleep 10
      - run: bundle exec rake db:migrate RAILS_ENV=test
      - run:
          name: Run Rspec
          command: bundle exec rspec --tag \~integration --format progress --format RspecJunitFormatter -o /tmp/rspec/rspec.xml
      - store_test_results:
          path: /tmp/rspec
      - store_artifacts:
          path: coverage
      - store_artifacts:
          path: /home/circleci/tiger_data/tmp/capybara
      - coveralls/upload
  mflux_ci:
    working_directory: ~/tiger_data
    machine:
      image: ubuntu-2404:2024.05.1
      docker_layer_caching: true
    environment:
      POSTGRES_USER: tiger_data_user
      POSTGRES_DB: test_db
      POSTGRES_HOST_AUTH_METHOD: trust
      ARCH: linux
    steps:
      - checkout
      - install_dependencies
      - persist_to_workspace:
          root: &root "~/tiger_data"
          paths: "*"
      - run:
          name: Run vitest
          command: yarn run vitest run
      - run_postgres
      # wait for postgres and mediaflux
      - run: sleep 10
      - run: bundle exec rake db:migrate RAILS_ENV=test
      - run:
          name: Run Rspec
          command: MFLUX_CI=true MFLUX_CI_PASSWORD=$DAILY_CI_MFLUX_PASSWORD bundle exec rspec --format progress --format RspecJunitFormatter -o /tmp/rspec/rspec.xml
      - store_test_results:
          path: /tmp/rspec
      - store_artifacts:
          path: coverage
      - store_artifacts:
          path: /home/circleci/tiger_data/tmp/capybara
      - coveralls/upload
  deploy:
    executor: basic-executor
    steps:
      - run:
          # prettier-ignore
          name: Deploy to CI
          command: "curl -X POST \"https://ansible-tower.princeton.edu/api/v2/job_templates/89/launch/\" --header \"Content-Type: application/json\" --header \"Authorization: Bearer $TOWER_TOKEN\" -d '{\"credential_passwords\":{}}'"

workflows:
  version: 2
  build_accept_deploy:
    when:
      equal: ["<< pipeline.parameters.GHA_Event >>", ""]
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only:
                - main
  ci_daily:
    when:
      equal: ["<< pipeline.parameters.GHA_Event >>", "schedule"]
    jobs:
      - mflux_ci
